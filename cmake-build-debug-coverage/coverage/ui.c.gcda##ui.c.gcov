        -:    0:Source:C:/FACC/OOP/Lab2-4/ui.c
        -:    0:Graph:C:\FACC\OOP\Lab2-4\cmake-build-debug-coverage\CMakeFiles\Lab2_4.dir\ui.c.gcno
        -:    0:Data:C:\FACC\OOP\Lab2-4\cmake-build-debug-coverage\CMakeFiles\Lab2_4.dir\ui.c.gcda
        -:    0:Runs:1
        -:    1:#include "ui.h"
        -:    2:#include <stdio.h>
        -:    3:#include "stdlib.h"
        -:    4:
function testAll called 1 returned 100% blocks executed 100%
        1:    5:void testAll(){
        1:    6:    testCreateDestroy();
        1:    6-block  0
call    0 returned 1
        1:    7:    testcreeazaEmpty();
call    0 returned 1
        1:    8:    testadd();
call    0 returned 1
        1:    9:    testmodif();
call    0 returned 1
        1:   10:    teststergere();
call    0 returned 1
        1:   11:    testaddService();
call    0 returned 1
        1:   12:    testmodifService();
call    0 returned 1
        1:   13:    teststergereService();
call    0 returned 1
        1:   14:    testordonareService();
call    0 returned 1
        1:   15:}
        -:   16:
function citesteMedicamente called 0 returned 0% blocks executed 0%
    #####:   17:void citesteMedicamente(Lista* l, int comanda){
    #####:   18:    printf("ID:");
    %%%%%:   18-block  0
call    0 never executed
        -:   19:    int cod_unic;
    #####:   20:    scanf("%d",&cod_unic);
call    0 never executed
    #####:   21:    printf("Nume:");
call    0 never executed
    #####:   22:    char *nume = malloc(sizeof(char) * 50);;
    #####:   23:    scanf("%s", nume);
call    0 never executed
    #####:   24:    printf("Concentratie:");
call    0 never executed
        -:   25:    int concentratie;
    #####:   26:    scanf("%d",&concentratie);
call    0 never executed
    #####:   27:    printf("Cantitate:");
call    0 never executed
        -:   28:    int cantitate;
    #####:   29:    scanf("%d",&cantitate);
call    0 never executed
        -:   30:
    #####:   31:    if (comanda == 1) {
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   32:        int eroare = addMedicament(l, cod_unic, nume, concentratie, cantitate);
    %%%%%:   32-block  0
call    0 never executed
    #####:   33:        if(eroare != 0)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   34:            printf("Medicament invalid!\n");
    %%%%%:   34-block  0
call    0 never executed
        -:   35:        else
    #####:   36:            printf("Medicament adaugat\n");
    %%%%%:   36-block  0
call    0 never executed
        -:   37:    }
        -:   38:    else{
    #####:   39:        int eroare = modifMedicament(l, cod_unic, nume, concentratie, cantitate);
    %%%%%:   39-block  0
call    0 never executed
    #####:   40:        if(eroare != 0)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   41:            printf("Medicament invalid!\n");
    %%%%%:   41-block  0
call    0 never executed
        -:   42:        else
    #####:   43:            printf("Medicament modificat\n");
    %%%%%:   43-block  0
call    0 never executed
        -:   44:    }
    #####:   45:}
        -:   46:
function stergereMedicamente called 0 returned 0% blocks executed 0%
    #####:   47:void stergereMedicamente(Lista* l){
    #####:   48:    printf("ID:");
    %%%%%:   48-block  0
call    0 never executed
        -:   49:    int cod_unic;
    #####:   50:    scanf("%d",&cod_unic);
call    0 never executed
    #####:   51:    int eroare = stergeMedicament(l, cod_unic);
call    0 never executed
    #####:   52:    if (eroare != 0)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   53:        printf("Medicament invalid!\n");
    %%%%%:   53-block  0
call    0 never executed
        -:   54:    else
    #####:   55:        printf("Medicament sters\n");
    %%%%%:   55-block  0
call    0 never executed
    #####:   56:}
        -:   57:
function ordoneazaMedicamente called 0 returned 0% blocks executed 0%
    #####:   58:void ordoneazaMedicamente(Lista* l){
    #####:   59:    if (l->lungime > 0) {
    %%%%%:   59-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   60:        printf("Medicamentele au fost ordondate:\n");
    %%%%%:   60-block  0
call    0 never executed
    #####:   61:        ordonareMedicament(l);
call    0 never executed
        -:   62:    }
        -:   63:    else
    #####:   64:        printf("Lista este goala!\n");
    %%%%%:   64-block  0
call    0 never executed
    #####:   65:}
        -:   66:
function afiseazaMedicamente called 0 returned 0% blocks executed 0%
    #####:   67:void afiseazaMedicamente(Lista* l){
    #####:   68:    if (l->lungime > 0) {
    %%%%%:   68-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:   69:        printf("Medicamentele:\n");
    %%%%%:   69-block  0
call    0 never executed
    #####:   70:        for (int i = 0; i < l->lungime; i++) {
    %%%%%:   70-block  0
branch  0 never executed
branch  1 never executed
    #####:   71:            TElem* elem = get_elem(l, i);
    %%%%%:   71-block  0
call    0 never executed
    #####:   72:            printf("%d %s %d %d\n", elem->cod_unic, elem->nume, elem->concentratie, elem->cantitate);
call    0 never executed
        -:   73:        }
        -:   74:    }
        -:   75:    else
    #####:   76:        printf("Lista este goala!\n");
    %%%%%:   76-block  0
call    0 never executed
    #####:   77:}
        -:   78:
function run called 1 returned 100% blocks executed 50%
        1:   79:void run(){
        1:   80:    Lista* l = creeazaEmpty();
        1:   80-block  0
call    0 returned 1
        1:   81:    int ruleaza = 1;
        2:   82:    while(ruleaza){
        2:   82-block  0
branch  0 taken 1
branch  1 taken 1 (fallthrough)
        1:   83:        printf("1.Add\n2.Update\n3.Delete\n4.All\nAlegeti optiunea:");
        1:   83-block  0
call    0 returned 1
        1:   84:        int cmd = 0;
        1:   85:        scanf("%d", &cmd);
call    0 returned 1
        1:   86:        switch (cmd) {
branch  0 taken 0
branch  1 taken 0
branch  2 taken 0
branch  3 taken 0
branch  4 taken 0
branch  5 taken 1
branch  6 taken 0
    #####:   87:            case 1:
    #####:   88:                citesteMedicamente(l, 1);
    %%%%%:   88-block  0
call    0 never executed
    #####:   89:                break;
    #####:   90:            case 2:
    #####:   91:                citesteMedicamente(l, 2);
    %%%%%:   91-block  0
call    0 never executed
    #####:   92:                break;
    #####:   93:            case 3:
    #####:   94:                stergereMedicamente(l);
    %%%%%:   94-block  0
call    0 never executed
    #####:   95:            case 4:
    #####:   96:                ordoneazaMedicamente(l);
    %%%%%:   96-block  0
call    0 never executed
    #####:   97:                break;
    #####:   98:            case 5:
    #####:   99:                afiseazaMedicamente(l);
    %%%%%:   99-block  0
call    0 never executed
    #####:  100:                break;
        1:  101:            case 0:
        1:  102:                ruleaza = 0;
        1:  103:                break;
        1:  103-block  0
    #####:  104:            default:
    #####:  105:                printf("Comanda invalida!\n");
    %%%%%:  105-block  0
call    0 never executed
        -:  106:        }
        -:  107:    }
        1:  108:    destroyLista(l);
        1:  108-block  0
call    0 returned 1
        1:  109:}
